#!/usr/bin/env bash
 
# Formatting constants
c_black=
c_cyan=
c_magenta=
c_red=
c_white=
c_green=
c_yellow=
c_blue=
c_bg_black=
c_bg_cyan=
c_bg_magenta=
c_bg_red=
c_bg_white=
c_bg_green=
c_bg_yellow=
c_bg_blue=
c_end=
c_bold=
 
xterm_color() {
	#	0	Black
	#	1	Red
	#	2	Green
	#	3	Yellow
	#	4	Blue
	#	5	Magenta
	#	6	Cyan
	#	7	White
 
    # Yes, this could be a map
    c_bold=`tput setaf 0`
    c_bg_bold=`tput setab 0`
    c_black=`tput setab 0`
    c_bg_black=`tput setab 0`
    c_cyan=`tput setaf 6`
    c_bg_cyan=`tput setab 6`
    c_magenta=`tput setaf 5`
    c_bg_magenta=`tput setab 5`
    c_red=`tput setaf 1`
    c_bg_red=`tput setab 1`
    c_white=`tput setaf 7`
    c_bg_white=`tput setab 7`
    c_green=`tput setaf 2`
    c_bg_green=`tput setab 2`
    c_yellow=`tput setaf 3`
    c_bg_yellow=`tput setab 3`
    c_blue=`tput setaf 4`
    c_bg_blue=`tput setab 4`
    c_end=`tput sgr0`
}
 
# Wrapper function for Maven's mvn command.
mvn_color()
{
  xterm_color
  
	error=${c_bold}${c_red}
	info=${c_white}
	warn=${c_yellow}
	success=${c_green}
	projectname=${c_bold}${c_cyan}
	skipped=${c_white}
	downloading=${c_magenta}
 
        tmp_file=$(mktemp) 
 
        (command $M2_HOME/bin/mvn $@ ; echo $? > $tmp_file) | tee /tmp/lastmavencommand | \
	 sed -E -e "s/(\[INFO\]) Building( .*)/${info}\1${projectname}\2${c_end}/g" \
	        -e "s/(\[INFO\]\ \-.*)/${info}\1${c_end}/g" \
                -e "s/(\[INFO\]\ \[.*)/${c_end}${info}\1${c_end}/g" \
                -e "s/(\[INFO]\ BUILD SUCCESS)/${c_bold}${c_blue}\1${c_end}/g" \
		-e "s/(Time elapsed: )([0-9]+[.]*[0-9]*.sec)/${c_cyan}\1${c_white}\2${c_end}/g" \
		-e "s/(Downloading: .*)/${downloading}\1${c_end}/g" \
		-e "s/BUILD FAILURE/${error}BUILD FAILURE${c_end}/g" \
		-e "s/WARNING: ([a-zA-Z0-9.-\/\\ :]+)/${warn}WARNING: \1${c_end}/g" \
		-e "s/SEVERE: (.+)/${c_white}${c_bg_red}SEVERE: \1${c_end}/g" \
		-e "s/Caused by: (.+)/${c_white}${c_bg_green}Caused by: \1${c_end}/g" \
		-e "s/Running (.+)/${c_green}Running \1${c_end}/g" \
		-e "s/FAILURE (\[[0-9]+.[:0-9]+s\])/${error}FAILURE \1${c_end}/g" \
		-e "s/SUCCESS (\[[0-9]+.[:0-9]+s\])/${success}SUCCESS \1${c_end}/g" \
	        -e "s/(\[WARN.*)/${warn}\1${c_end}/g" \
    	-e "s/(\[ERROR.*)/${error}\1${c_end}/g" \
    	-e "s/(<<< FAILURE!)/${error}\1${c_end}/g" \
    	-e "s/Tests run: ([0-9]*), Failures: ([0-9]*), Errors: ([0-9]*), Skipped: ([0-9]*)/${c_blue}Tests run: \1 ${c_end}, Failures: ${warn}\2 ${c_end}, Errors: ${error}\3 ${c_end}, Skipped:  ${skipped}\4 ${c_end}/g"
  # Make sure formatting is reset
  echo -ne ${RESET_FORMATTING}
  
    # Return the exit code of the mvn command
  read mvn_exit_code < $tmp_file
  \rm -f $tmp_file

  return $mvn_exit_code
}
 
# Override the mvn command with the colorized one.
alias mvn="mvn_color"

mvnrun () {
  echo mvn $@
  eval mvn $@
  echo mvn $@
}

mvnrunwithjvmopts() {
  maven_opts=$MAVEN_OPTS
  export MAVEN_OPTS="-Xmx2048m -Xms1024m -XX:MaxPermSize=512m -Xdebug -Xnoagent -Xrunjdwp:transport=dt_socket,server=y,address=8000,suspend=n -Dcom.sun.management.jmxremote";
  echo mvn $@
  eval mvn $@
  echo mvn $@
  export MAVEN_OPTS=$maven_opts
}

